<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OrderMapper">

    <!-- 관리자가 보는 발주내역 주문서리스트 -->
    <select id="getOrderList" resultType="order">
        select order_no,
               m.id,
               m.ceo,
               total_price,
               order_status,
               processing_day,
               note,
               shipping_address
        from orders o
                 inner join member m
                            on o.id = m.id
        where m.level1 = 2
    </select>

    <!-- 발주 내역 / 장바구니 번호 클릭시 해당 id가 주문한 내역들  (모달)-->
    <select id="getOrderDetail" resultType="order">
        select m.id,
               d.detail_no,
               d.order_no,
               p.product_no,
               d.purchase_amount,
               p.product_name,
               o.total_price,
               p.brand
        from order_detail d
                 inner join product p
                            on d.product_no = p.product_no
                 inner join orders o
                            on d.order_no = o.order_no
                 inner join member m
                            on o.id = m.id
        where o.id = #{id}
    </select>

    <!-- 가맹점 본인 발주내역 리스트 -->
    <select id="getOrderListid" resultType="order">
        select order_no,
               m.id,
               m.ceo,
               total_price,
               order_status,
               shipping_address,
               processing_day,
               note
        from orders o
                 inner join member m
                            on o.id = m.id
        where m.id = #{id}
    </select>
    <!-- 검색 조회 -->

    <insert id="insertOrder">
        insert into orders(order_no, id, postcode, shipping_address, detailaddress, note, total_price, order_status)
        values (#{order_no}, #{id}, #{postcode}, #{shipping_address}, #{detailAddress}, #{note,
		jdbcType=VARCHAR}, #{total_price}, #{order_status})
    </insert>
    <insert id="insertItemList">
        insert into order_detail
        values ((SELECT NVL(MAX(detail_no), 0) + 1
                 FROM order_detail), #{order_no}, #{product_no}, #{purchase_amount})
    </insert>

    <!-- 가맹점 주문서 상세 조회(모달) -->
    <select id="getOrderno" resultType="order">
        select d.detail_no,
               d.order_no,
               p.product_no,
               p.product_name,
               d.purchase_amount,
               p.price
        from order_detail d
                 inner join product p
                            on d.product_no = p.product_no
                 inner join orders o
                            on d.order_no = o.order_no
        where o.order_no = #{order_no}
    </select>

    <select id="getTopOrderFactory" resultType="topOrder">
        SELECT p.uuid,
               p.add_day,
               p.product_name,
               p.price,
               od.purchase_amount,
               od.total_price
        FROM (SELECT od.product_no,
                     sum(od.purchase_amount) as purchase_amount,
                     sum(o.total_price)      as total_price
              FROM order_detail od
                       INNER JOIN orders o ON od.order_no = o.order_no
              WHERE o.order_status = 1
              GROUP by od.product_no) od
                 INNER JOIN product p ON od.product_no = p.product_no
        ORDER BY purchase_amount desc
    </select>

    <select id="getTopOrderFranc" parameterType="String" resultType="topOrder">
        SELECT p.uuid,
               p.add_day,
               p.product_name,
               p.price,
               od.purchase_amount,
               od.total_price
        FROM (SELECT od.product_no,
                     sum(od.purchase_amount) as purchase_amount,
                     sum(o.total_price)      as total_price
              FROM order_detail od
                       INNER JOIN orders o ON od.order_no = o.order_no
              WHERE o.order_status = 1
                and id = #{id}
              GROUP by od.product_no) od
                 INNER JOIN product p ON od.product_no = p.product_no
        ORDER BY purchase_amount desc
    </select>

    <select id="getUnOrderCount" parameterType="String" resultType="int">
        SELECT
        COUNT(order_no) as count
        FROM
        orders
        where
        order_status = 1
        <if test="value neq null">
            and id = #{id}
        </if>
    </select>

    <select id="getOrderSearch" resultType="order">
        SELECT *
        FROM orders o
                 INNER JOIN member m
                            ON o.id = m.id
        WHERE o.order_no like '%' || #{searchName} || '%'
           OR o.total_price like '%' || #{searchName} || '%'
           OR o.shipping_address like '%' || #{searchName} || '%'
           OR o.note like '%' || #{searchName} || '%'
        ORDER BY o.order_no DESC
    </select>


</mapper>